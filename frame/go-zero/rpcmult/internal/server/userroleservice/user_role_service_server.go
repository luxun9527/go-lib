// Code generated by goctl. DO NOT EDIT.
// Source: mult.proto

package server

import (
	"context"

	"go-lib/frame/go-zero/rpcmult/internal/logic/userroleservice"
	"go-lib/frame/go-zero/rpcmult/internal/svc"
	"go-lib/frame/go-zero/rpcmult/mult"
)

type UserRoleServiceServer struct {
	svcCtx *svc.ServiceContext
	mult.UnimplementedUserRoleServiceServer
}

func NewUserRoleServiceServer(svcCtx *svc.ServiceContext) *UserRoleServiceServer {
	return &UserRoleServiceServer{
		svcCtx: svcCtx,
	}
}

func (s *UserRoleServiceServer) UserRoleList(ctx context.Context, in *mult.UserRoleListReq) (*mult.UserRoleListResp, error) {
	l := userroleservicelogic.NewUserRoleListLogic(ctx, s.svcCtx)
	return l.UserRoleList(in)
}

func (s *UserRoleServiceServer) UserRoleUpdate(ctx context.Context, in *mult.UserRoleUpdateReq) (*mult.UserRoleUpdateResp, error) {
	l := userroleservicelogic.NewUserRoleUpdateLogic(ctx, s.svcCtx)
	return l.UserRoleUpdate(in)
}

func (s *UserRoleServiceServer) UserRoleInfo(ctx context.Context, in *mult.UserRoleInfoReq) (*mult.UserRoleInfoResp, error) {
	l := userroleservicelogic.NewUserRoleInfoLogic(ctx, s.svcCtx)
	return l.UserRoleInfo(in)
}

func (s *UserRoleServiceServer) UserRoleAdd(ctx context.Context, in *mult.UserRoleAddReq) (*mult.UserRoleAddResp, error) {
	l := userroleservicelogic.NewUserRoleAddLogic(ctx, s.svcCtx)
	return l.UserRoleAdd(in)
}

func (s *UserRoleServiceServer) UserRoleDelete(ctx context.Context, in *mult.UserRoleDeleteReq) (*mult.UserRoleDeleteResp, error) {
	l := userroleservicelogic.NewUserRoleDeleteLogic(ctx, s.svcCtx)
	return l.UserRoleDelete(in)
}
