package standard

import (
	"fmt"
	"testing"
)

func TestUint(t *testing.T) {
	//0   0   0   0   0  0   0  0
	//1   1   1    1  1  1   1  1
	//128 64  32  16  8  4   2  1
	//一个字节 无符号最大 255
	/*
		反码：正数的反码就是其原码；负数的反码是将原码中，除符号位以外，每一位取反。如单字节的5的反码为：0000 0101；-5的反码为1111 1010。
		补码：正数的补码就是其原码；负数的反码+1就是补码。如单字节的5的补码为：0000 0101；-5的原码为1111 1011。
	*/

	//有符号
	//0   0   0   0   0  0   0  0
	//1   1   1   1   1  1   1  1
	//+  64  32  16   8  4   2  1  0111 1111 127
	//-  64  32  16   8  4   2  1  1000 0000 -128
	//一个字节可以表示的最大值127，最小值-128。
	// uint8的取值范围： 0 - 255
	var a uint8 = 1
	var b uint8 = 255
	//128 64  32  16  8  4    2  1
	//0   0   0   0   0  0    0  1
	//1   1   1   1   1   1   1  1
	//0   0   0   0   0   0   0  0

	var c uint8 = 4
	var d uint8 = 255
	//128 64  32  16  8  4    2  1
	//0   0   0   0   0  1    0  0
	//1   1   1   1   1   1   1  1
	//0   0   0   0   0   0   1  1

	//一个字节 无符号最大 255
	result := a + b
	fmt.Println("减法：", result)
	result1 := c + d
	fmt.Println("加法：", result1)
}
